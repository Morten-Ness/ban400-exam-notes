2+2
2+2
a <- 5
library(ggplot2)
library(ggplot2)
a <- 5
library(readr)
# .. but any R object can be saved:
save(a, file = "a.RData")
rm(a)
load("a.RData")
setwd("/Users/hakon/Library/CloudStorage/OneDrive-NorwegianSchoolofEconomics/dropbox/nhh/ban420/lectures/project-organization")
# In this case we have many many tiny csv-files. We can set up a for-loop and
# read them in one by one, but let us instead try the "vroom"-package, which can
# do this with maximum speed (which in this case is still quite slow because
# there are so many). We first make a vector of the file paths, which we then
# pass on to vroom(). We keep the file paths in a separate column (called "file"
# in the id-argument) in order to extract the seller id and week number.
sales <-
paste("raw/", dir("raw"), sep = "") %>%
vroom(id = "file") %>%
# Split the file name by the underscore using the separate-function
separate(file,
into = c("seller_id", "week"),
sep = "_") %>%
# Clean away the folder part and the file extension from the seller_id and
# week-variables. Also, transform the week to numeric values
mutate(week = gsub(".csv", "", .$week) %>% as.numeric) %>%
mutate(seller_id = gsub("raw/", "", .$seller_id))
library(tidyverse)
# In this case we have many many tiny csv-files. We can set up a for-loop and
# read them in one by one, but let us instead try the "vroom"-package, which can
# do this with maximum speed (which in this case is still quite slow because
# there are so many). We first make a vector of the file paths, which we then
# pass on to vroom(). We keep the file paths in a separate column (called "file"
# in the id-argument) in order to extract the seller id and week number.
sales <-
paste("raw/", dir("raw"), sep = "") %>%
vroom(id = "file") %>%
# Split the file name by the underscore using the separate-function
separate(file,
into = c("seller_id", "week"),
sep = "_") %>%
# Clean away the folder part and the file extension from the seller_id and
# week-variables. Also, transform the week to numeric values
mutate(week = gsub(".csv", "", .$week) %>% as.numeric) %>%
mutate(seller_id = gsub("raw/", "", .$seller_id))
library(vroom)
# In this case we have many many tiny csv-files. We can set up a for-loop and
# read them in one by one, but let us instead try the "vroom"-package, which can
# do this with maximum speed (which in this case is still quite slow because
# there are so many). We first make a vector of the file paths, which we then
# pass on to vroom(). We keep the file paths in a separate column (called "file"
# in the id-argument) in order to extract the seller id and week number.
sales <-
paste("raw/", dir("raw"), sep = "") %>%
vroom(id = "file") %>%
# Split the file name by the underscore using the separate-function
separate(file,
into = c("seller_id", "week"),
sep = "_") %>%
# Clean away the folder part and the file extension from the seller_id and
# week-variables. Also, transform the week to numeric values
mutate(week = gsub(".csv", "", .$week) %>% as.numeric) %>%
mutate(seller_id = gsub("raw/", "", .$seller_id))
sales
paste("raw/", dir("raw"), sep = "")
paste("raw/", dir("raw"), sep = "") %>%
vroom(id = "file")
paste("raw/", dir("raw"), sep = "") %>%
vroom(id = "file") %>%
# Split the file name by the underscore using the separate-function
separate(file,
into = c("seller_id", "week"),
sep = "_")
sales
setwd("/Users/hakon/Downloads")
library(readxl)
students <- read_excel("students.xlsx")
students
students <- students %>% mutate(id = paste0("s", "Student Id Number"))
students
students <- students %>% mutate(id = paste0("s", `Student Id Number`))
students
students <- students %>% select(id)
students
write_csv(students, file = "students.csv")
setwd("~/Library/CloudStorage/OneDrive-NorwegianSchoolofEconomics/dropbox/nhh/ban420/lectures/project-organization/newspaper-analysis/doc")
a <- 5
library(ggplot2)
setwd("~/")
setwd("~/work/repos/ban400-exam-notes")
install.packages("janitor")
janitor::make_clean_names("hello_hi")
janitor::make_clean_names("hello_hi", case = "sentence")
?knitr::knit_print
knitr::knit_child()
?knitr::knit_child()
#| eval: true
#| echo: false
#| results: 'asis'
files <- paste0("functions/", dir("functions"))
files
#| eval: true
#| echo: false
#| message: false
#| results: 'asis'
library(tidyverse)
files <- paste0("functions/", dir("functions"))
file = files[1]
basename(file)
?basename
#| eval: true
#| echo: false
#| message: false
#| results: 'asis'
library(tidyverse)
files <- paste0("functions/", dir("functions"))
for(file in files) {
name <-
file %>%
basename() %>%
file_path_sans_ext()
}
#| eval: true
#| echo: false
#| message: false
#| results: 'asis'
library(tidyverse)
files <- paste0("functions/", dir("functions"))
for(file in files) {
name <-
file %>%
basename() %>%
tools::file_path_sans_ext()
}
name <-
file %>%
basename() %>%
tools::file_path_sans_ext()
name
name <-
file %>%
basename() %>%
tools::file_path_sans_ext() %>%
gsub("*-", "", .)
name
name <-
file %>%
basename() %>%
tools::file_path_sans_ext() %>%
sub("^[0-9]+-", "", .)
name
name <-
file %>%
basename() %>%
tools::file_path_sans_ext() %>%
sub("^[0-9]+-", "", .) %>%
janitor::make_clean_names(case = "sentence")
name
table <- read_csv(file)
table
??kbl
tab <- read_csv(file)
cat(paste("###", name))
kableExtra::kbl(tab, booktabs = TRUE)
files <- paste0("topics/", dir("topics"))
for(file in files){
cat(paste0("{{< include ", file, " >}}"))
}
files
dir(topics)
dir("topics")
paste0("topics/", dir("topics"))
files <- paste0("topics/", dir("topics"))
for(file in files){
cat(paste0("{{< include ", file, " >}}"))
}
for(file in files){
cat(paste0("{{< include ", file, " >}} \n\n"))
}
