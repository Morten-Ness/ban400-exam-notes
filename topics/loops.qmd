### Loops and iterations

#### Standard for-loop

```{r}
for(i in 1:n) {
  ... do something with i... 
}
```

Note that we can iterate over any type of vector, not just numbers, and we can give the iteration variable any name we want. In the example above it is `i`.

A useful example of loops is the following used to read in multiple files into a single object:

```{r}
files <- dir("data/", pattern = "\\.csv$", full.names = TRUE)
df_list <- vector("list", length(files))
for (i in seq_along(files)) {
  df_list[[i]] <- read_csv(files[[i]])
}
```

#### While loop

Repeat until a certain condition is met. For example

```{r}
i <- 1
while(i < 10) {
  print(i)
  i <- i + 1
}
```

#### Alternatives

The family of functions `map()` from library purrr can sometimes be used instead of loops. For example, to compute the mean of every column: `map_dbl(mtcars, mean)`.

Similarly, `replicate()` from base R can be used to apply functions over lists and vectors.
